/*
 Main styles for specific components (eg. Navbar, Landing Page)
*/

// Variables are in _config.scss
@import 'config';
@import 'utilities';
@import 'form';

// ###
// Basic resets in core styles
* {
  box-sizing: border-box;
  margin: 0;
  padding: 0;
}

body {
  font-family: 'Raleway', sans-serif;
  // 1rem is equal to whatever is the default size of the root "html" tag is
  font-size: 1rem;
  line-height: 1.6;
  background-color: #fff;
  color: #333;
}

a {
  text-decoration: none;
  // from _config.scss
  color: $primary-color;
}

ul {
  // removing bullets for the list
  list-style: none;
}

// Want image to take a full width of their container, without braking-out
img {
  width: 100%;
}

// ###
// Navbar
.navbar {
  /*
  Flexbox VS. Grid
Grid: for main layouts - eg. boxes in profile page
Flexbox: for aligning elements inside of a Navbar (easier than to use Grid for such a little things)
  */

  // Flexbox; everything aligns horizontaly
  display: flex;
  align-items: center;
  // To put all the awailable space inbetween elements
  justify-content: space-between;
  padding: 0.7rem 2rem;
  // To keep Navbar always at the top
  position: fixed;
  // Allways o top of the rest of the content
  z-index: 1;
  width: 100%;
  // From the top - 0 position...
  top: 0;
  border-bottom: solid 1px $primary-color;
  opacity: 0.9;

  // Sass allowes to nes selectors

  ul {
    display: flex;
  }

  a {
    color: #fff;
    padding: 0.45rem;
    margin: 0 0.25rem;

    &:hover {
      color: $primary-color;
    }
  }
}

// Landing
.landing {
  // Then we are able to do "absolute" positioning within
  position: relative;
  background: url('../img/showcase.jpg') no-repeat center center/cover;
  // Entire height of the browser
  height: 100vh;

  // Making "landing-inner" class
  &-inner {
    color: #fff;
    // will be using Flexbox to align everything
    height: 100%;
    // Arranges objects in the row (side by side)
    display: flex;
    // Will arrange objects vertical (instead of horiz.)
    flex-direction: column;
    width: 80%;
    margin: auto;
    // To center horizontaly
    align-items: center;
    // To center verticaly
    justify-content: center;
    text-align: center;
  }
}

// Profiles Page
.profile {
  // Will display object as a grid (need columns)
  display: grid;
  // Fractions for columns. First column - 2 fractions, 2nd - 4 fractions, 3rd - 2fr.
  grid-template-columns: 2fr 4fr 2fr;
  // Gap inbetween items
  grid-gap: 2rem;
  align-items: center;
  padding: 1rem;
  line-height: 1.8;
  margin-bottom: 1rem;
}

// Profile Page
.profile-grid {
  display: grid;
  // Instead "grid-template-columns" will use "grid-template-areas" - it allows to visually map what we want...
  grid-template-areas: 'top top' 'about about' 'exp edu' 'github github';
  grid-gap: 1rem;
  // Will assign grid areas ("top", "about", "exp" etc) to actual classes
  // When aligning object WITHIN main areas of a website - using flex (not mandatory)
  .profile-top {
    grid-area: top;
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    text-align: center;

    img {
      width: 250px;
    }
    // For each link in icons class
    .icons a {
      color: #fff;
      margin: 0 0.3rem;
      &:hover {
        color: $dark-color;
      }
    }
  }

  .profile-about {
    grid-area: about;
    text-align: center;

    .skills {
      // Skills will be listed side-by-side
      display: flex;
      justify-content: center;
      align-items: center;
      text-align: center;
    }
  }

  .profile-exp {
    grid-area: exp;
  }

  .profile-edu {
    grid-area: edu;
  }
  // ".profile-exp > div" - styling imediate DIV WITHIN .profile-exp
  .profile-exp,
  .profile-edu {
    & > div {
      margin-bottom: 1rem;
      padding-bottom: 1rem;
      border-bottom: #ccc 1px dotted;
    }

    // Last-child pseudo selector to eliminate "border-bottom" line after the last object/element
    &:last-child {
      border: none;
    }

    p {
      margin: 0.5rem 0;
    }
  }

  .profile-github {
    grid-area: github;

    .repo {
      display: flex;
      // Ajusts spacing
      & > div:first-child {
        flex: 7;
        flex-basis: 70%;
      }

      & > div:last-child {
        flex: 3;
        flex-basis: 20%;
      }
    }
  }
}
